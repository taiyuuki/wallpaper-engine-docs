(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{498:function(e,t,r){"use strict";r.r(t);var a=r(26),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"scenescript-class-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scenescript-class-vec3"}},[e._v("#")]),e._v(" SceneScript Class Vec3")]),e._v(" "),r("p",[e._v("Utility class which holds a 3 dimensional value pair: "),r("code",[e._v("x")]),e._v(", "),r("code",[e._v("y")]),e._v(" and "),r("code",[e._v("z")]),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),r("h3",{attrs:{id:"x-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#x-number"}},[e._v("#")]),e._v(" x: Number")]),e._v(" "),r("p",[e._v("Value of first component.")]),e._v(" "),r("h3",{attrs:{id:"y-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#y-number"}},[e._v("#")]),e._v(" y: Number")]),e._v(" "),r("p",[e._v("Value of second component.")]),e._v(" "),r("h3",{attrs:{id:"z-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#z-number"}},[e._v("#")]),e._v(" z: Number")]),e._v(" "),r("p",[e._v("Value of third component.")]),e._v(" "),r("h2",{attrs:{id:"constructors"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructors"}},[e._v("#")]),e._v(" Constructors")]),e._v(" "),r("h3",{attrs:{id:"constructor-x-number-y-number-z-number-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructor-x-number-y-number-z-number-vec3"}},[e._v("#")]),e._v(" constructor(x: Number, y: Number, z: Number): Vec3")]),e._v(" "),r("p",[e._v("Constructor that sets x, y and z respectively.")]),e._v(" "),r("h3",{attrs:{id:"constructor-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructor-vec3"}},[e._v("#")]),e._v(" constructor(): Vec3")]),e._v(" "),r("p",[e._v("Empty constructor sets all components to 0.")]),e._v(" "),r("h3",{attrs:{id:"constructor-value-number-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructor-value-number-vec3"}},[e._v("#")]),e._v(" constructor(value: Number): Vec3")]),e._v(" "),r("p",[e._v("Sets x, y and z members to parameter value.")]),e._v(" "),r("h3",{attrs:{id:"constructor-x-number-y-number-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructor-x-number-y-number-vec3"}},[e._v("#")]),e._v(" constructor(x: Number, y: Number): Vec3")]),e._v(" "),r("p",[e._v("Constructor that sets x and y respectively and sets z to 0.")]),e._v(" "),r("h3",{attrs:{id:"constructor-value-string-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructor-value-string-vec3"}},[e._v("#")]),e._v(" constructor(value: String): Vec3")]),e._v(" "),r("p",[e._v("Will parse the first three numbers from the string and set x, y and z respectively.")]),e._v(" "),r("h3",{attrs:{id:"constructor-value-vec2-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructor-value-vec2-vec3"}},[e._v("#")]),e._v(" constructor(value: Vec2): Vec3")]),e._v(" "),r("p",[e._v("Will use x and y from value and set z to 0.")]),e._v(" "),r("h2",{attrs:{id:"functions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),r("h3",{attrs:{id:"length-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#length-number"}},[e._v("#")]),e._v(" length(): Number")]),e._v(" "),r("p",[e._v("Returns length of the vector.")]),e._v(" "),r("h3",{attrs:{id:"lengthsqr-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lengthsqr-number"}},[e._v("#")]),e._v(" lengthSqr(): Number")]),e._v(" "),r("p",[e._v("Returns squared length of the vector. This is more efficient, so if you only need a binary comparison, use this.")]),e._v(" "),r("h3",{attrs:{id:"normalize-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#normalize-vec3"}},[e._v("#")]),e._v(" normalize(): Vec3")]),e._v(" "),r("p",[e._v("Normalizes the vector and returns the result as a new object.")]),e._v(" "),r("h3",{attrs:{id:"copy-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#copy-vec3"}},[e._v("#")]),e._v(" copy(): Vec3")]),e._v(" "),r("p",[e._v("Makes a copy.")]),e._v(" "),r("h3",{attrs:{id:"add-value-number-vec3-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#add-value-number-vec3-vec3"}},[e._v("#")]),e._v(" add(value: Number|Vec3): Vec3")]),e._v(" "),r("p",[e._v("Adds parameter to all three components and returns result as a new object.")]),e._v(" "),r("h3",{attrs:{id:"subtract-value-number-vec3-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#subtract-value-number-vec3-vec3"}},[e._v("#")]),e._v(" subtract(value: Number|Vec3): Vec3")]),e._v(" "),r("p",[e._v("Subtracts parameter to all three components and returns result as a new object.")]),e._v(" "),r("h3",{attrs:{id:"multiply-value-number-vec3-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multiply-value-number-vec3-vec3"}},[e._v("#")]),e._v(" multiply(value: Number|Vec3): Vec3")]),e._v(" "),r("p",[e._v("Multiplies all three components with parameter and returns result as a new object.")]),e._v(" "),r("h3",{attrs:{id:"divide-value-number-vec3-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#divide-value-number-vec3-vec3"}},[e._v("#")]),e._v(" divide(value: Number|Vec3): Vec3")]),e._v(" "),r("p",[e._v("Divides all three components by parameter and returns result as a new object. Does not check for zero division.")]),e._v(" "),r("h3",{attrs:{id:"dot-value-vec3-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dot-value-vec3-number"}},[e._v("#")]),e._v(" dot(value: Vec3): Number")]),e._v(" "),r("p",[e._v("Computes dot product with vector value.")]),e._v(" "),r("h3",{attrs:{id:"reflect-normal-vec3-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reflect-normal-vec3-vec3"}},[e._v("#")]),e._v(" reflect(normal: Vec3): Vec3")]),e._v(" "),r("p",[e._v("Returns reflection vector along normal. Make sure that normal is normalized.")]),e._v(" "),r("h3",{attrs:{id:"cross-value-vec3-vec3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cross-value-vec3-vec3"}},[e._v("#")]),e._v(" cross(value: Vec3): Vec3")]),e._v(" "),r("p",[e._v("Returns cross product between this and value as a new object.")]),e._v(" "),r("h3",{attrs:{id:"tostring-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tostring-string"}},[e._v("#")]),e._v(" toString(): String")]),e._v(" "),r("p",[e._v("Concatenates components with a space in-between so that it can also be parsed again.")])])}),[],!1,null,null,null);t.default=s.exports}}]);