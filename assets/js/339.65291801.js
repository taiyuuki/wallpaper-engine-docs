(window.webpackJsonp=window.webpackJsonp||[]).push([[339],{702:function(v,t,_){"use strict";_.r(t);var e=_(26),s=Object(e.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"时间轴动画介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#时间轴动画介绍"}},[v._v("#")]),v._v(" 时间轴动画介绍")]),v._v(" "),_("p",[v._v("时间轴动画可以让你为壁纸组件的所有属性创建具有预定长度的动画。如果这听起来令人困惑，别担心，本指南将通过示例和深入解释向你介绍创建时间轴动画所需的所有步骤。")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),_("p",[v._v("不要将时间轴动画与通过"),_("a",{attrs:{href:"/wallpaper-engine-docs/scene/effects/overview"}},[v._v("效果")]),v._v("创建的动画混淆，它们是完全不同的概念。")])]),v._v(" "),_("h2",{attrs:{id:"创建简单的运动动画"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建简单的运动动画"}},[v._v("#")]),v._v(" 创建简单的运动动画")]),v._v(" "),_("p",[v._v("为创建时间轴动画，假设你想将一个对象（本例中是云）从图像的一侧不停的移动到另一侧。")]),v._v(" "),_("p",[v._v("第一步是确定你想要的动画是什么样子，所以让我们先看一下如果你在编辑器中从左向右移动一个对象会发生什么：")]),v._v(" "),_("video",{attrs:{width:"100%",controls:""}},[_("source",{attrs:{src:v.$withBase("/videos/timeline_intro.mp4"),type:"video/mp4"}}),v._v("\n  Your browser does not support the video tag.\n")]),v._v(" "),_("p",[v._v("可以看到，当我们从左向右移动对象时，“"),_("em",[v._v("起点")]),v._v("”的X值会增加，因此，对于此动画，我们希望给 “"),_("em",[v._v("起点")]),v._v("” 属性分配时间轴动画，特别是 “"),_("em",[v._v("X轴")]),v._v("”。我们可以通过单击 “"),_("em",[v._v("起点")]),v._v("” 旁边的齿轮图标并选择 “"),_("em",[v._v("绑定时间轴动画")]),v._v("” 。")]),v._v(" "),_("p",[v._v("单击“"),_("em",[v._v("绑定时间轴动画")]),v._v("”后，将显示动画的基本选项：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("模式")]),v._v("： 更改动画的播放行为：\n"),_("ul",[_("li",[_("em",[v._v("循环：")]),v._v(" 动画运行到结束位置，完成以后立即跳回开头的位置。")]),v._v(" "),_("li",[_("em",[v._v("镜像：")]),v._v(" 动画运行到结束位置，完成以后按相反方向回到开头的位置。")]),v._v(" "),_("li",[_("em",[v._v("单张：")]),v._v(" 动画只运行一次，完成后停止在最后一帧。")])])]),v._v(" "),_("li",[_("strong",[v._v("秒")]),v._v("： 动画从第一帧到最后一帧的秒数。")]),v._v(" "),_("li",[_("strong",[v._v("帧")]),v._v("： 帧的数量，即动画的步数。\n"),_("ul",[_("li",[_("em",[v._v("帧率：")]),v._v(" 如果切换到帧率，表示每秒帧的数量。")])])]),v._v(" "),_("li",[_("strong",[v._v("名称")]),v._v("： 动画的可选名称，在将动画与 “"),_("em",[v._v("SceneScript")]),v._v("” 结合使用时特别有用。")]),v._v(" "),_("li",[_("strong",[v._v("开始播放时暂停")]),v._v("： 如果勾选开始播放时暂停，你需要通过 “"),_("em",[v._v("SceneScript")]),v._v("” 手动启动动画。")]),v._v(" "),_("li",[_("strong",[v._v("环绕循环帧")]),v._v("： 循环动画结束时，将创建最后一帧到第一帧的平滑过渡。")])]),v._v(" "),_("p",[v._v("在这个例子中，我们将 "),_("strong",[v._v("模式")]),v._v(" 设置为 "),_("strong",[v._v("循环")]),v._v("，因为我们希望云在到达终点后重新回到左侧。"),_("strong",[v._v("秒")]),v._v(" 决定了云从左到右移动所需的时间，在本教程中，我们将其设置为 "),_("strong",[v._v("3 秒")]),v._v("，但你可以设置一个较长的时间（如 30 秒）来使云移动得更慢 —— 这最终取决于你的风格。"),_("strong",[v._v("帧")]),v._v(" 决定了动画中有多少关键帧，即步数。通常情况下，对于大多数动画，你可以将其设置为 30，但为了动画更自然，你应该确保要设置的关键帧之间有足够的空帧。我们将 "),_("strong",[v._v("名称")]),v._v(" 设置为 “"),_("em",[v._v("Cloud Movement")]),v._v("”（云移动），以便于之后用来识别动画，然后不要勾选 “"),_("em",[v._v("开始播放时暂停")]),v._v("” ，因为我们希望动画一直运行。与此同时，我们还需要关闭 "),_("strong",[v._v("循环帧")]),v._v(" 选项，因为我们不希望动画的结尾和开头之间平滑过渡：我们希望对象直接从右侧跳回左侧。某种意义上，这是一个特例，因为在大多数情况下，你可能希望在动画的第一帧和最后一帧之间有一个平滑的过渡。")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),_("p",[v._v("请确保有足够的帧来创建更自然的动画，并尽量在保证关键帧之间留出足够的空帧。如果关键帧太近，动画将忽略平滑 "),_("strong",[v._v("曲线")]),v._v(" 效果，动画看起来会更机械。")])]),v._v(" "),_("video",{attrs:{width:"100%",controls:""}},[_("source",{attrs:{src:v.$withBase("/videos/timeline_simple_configuration.mp4"),type:"video/mp4"}}),v._v("\n  Your browser does not support the video tag.\n")]),v._v(" "),_("p",[v._v("确认设置后，你可以在屏幕上看到时间轴动画面板。时间轴动画将显示三条线，分别表示 "),_("strong",[v._v("起点")]),v._v(" 属性的三个值**：X**（红色）、"),_("strong",[v._v("Y")]),v._v("（绿色）和 "),_("strong",[v._v("Z")]),v._v("（蓝色）。由于我们实际上只关心对象在 "),_("strong",[v._v("X")]),v._v(" 轴上（从左到右）的移动，因此我们首先鼠标右键单击左侧的 "),_("strong",[v._v("起点x")]),v._v(" 选项，并选择 “"),_("em",[v._v("显示单个")]),v._v("” 以隐藏其他值：")]),v._v(" "),_("video",{attrs:{width:"100%",controls:""}},[_("source",{attrs:{src:v.$withBase("/videos/timeline_show_single.mp4"),type:"video/mp4"}}),v._v("\n  Your browser does not support the video tag.\n")]),v._v(" "),_("p",[v._v("现在我们可以开始调节动画了。首先移动对象到起点位置，我们可以看到时间轴底部 "),_("strong",[v._v("关键帧0")]),v._v(" 的位置被选中，由于默认情况下 "),_("strong",[v._v("自动关键帧")]),v._v(" 选项被启用，你对动画对象的任何修改都会自动添加关键帧，并将修改的值作为当前关键帧中对应的值。")]),v._v(" "),_("p",[v._v("当前的云在起点位置，然后将时间轴标记拉到最后一帧。这样云就处于最后一帧，然后将云移动到动画结束时所需的位置，或者在 "),_("strong",[v._v("起点")]),v._v(" 属性的 X 值中手动键入数字。你还可以尝试单击面板右侧的 "),_("strong",[v._v("放大镜")]),v._v(" 图标，它可以调整和缩放时间轴，它可以自动重新调整时间轴，让你概览整个动画。")]),v._v(" "),_("p",[v._v("移动到最后一帧，单击 “"),_("em",[v._v("播放")]),v._v("” 按钮可以预览循环。你可以在下面的视频中看到此过程。")]),v._v(" "),_("video",{attrs:{width:"100%",controls:""}},[_("source",{attrs:{src:v.$withBase("/videos/timeline_keyframe_placement.mp4"),type:"video/mp4"}}),v._v("\n  Your browser does not support the video tag.\n")]),v._v(" "),_("p",[v._v("默认情况下，Wallpaper Engine 将通过降低动画的进出速度来平滑动画。它使用 "),_("strong",[v._v("贝塞尔曲线")]),v._v(" 来实现：当你选择属性的一个或多个关键帧（图形中的小方块）时，你也可以通过抓取曲线周围的线条来微调曲线。")]),v._v(" "),_("p",[v._v("但是，在当前情况下，我们希望云以恒定的速度移动，因为云通常不会加速或减速。为确保这一点，请通过选择 "),_("strong",[v._v("起点x")]),v._v("线的关键帧（两个红色框）来关闭贝塞尔曲线，然后单击 "),_("strong",[v._v("切换关键帧的贝塞尔")]),v._v(" 按钮三次（就是 "),_("strong",[v._v("自动关键帧")]),v._v(" 按钮的下面，左边第一个按钮），直到它被关闭（它有四种模式："),_("em",[v._v("左，右，二者，无")]),v._v("，通过按钮的颜色来表示），图形从曲线变成直线。这意味着云现在在屏幕上以恒定的速度移动。请看下面的视频来了解这一点：")]),v._v(" "),_("video",{attrs:{width:"100%",controls:""}},[_("source",{attrs:{src:v.$withBase("/videos/timeline_interpolation.mp4"),type:"video/mp4"}}),v._v("\n  Your browser does not support the video tag.\n")]),v._v(" "),_("p",[v._v("就是这样，我们现在有一朵云，它从左向右移动并无限循环。你可以在此时添加简单的变化，例如，将云移动到离屏幕更远的位置，以延迟它的重新出现。你可以在以下视频中重新观看所有步骤和结果。")]),v._v(" "),_("video",{attrs:{width:"100%",controls:""}},[_("source",{attrs:{src:v.$withBase("/videos/timeline_simple_movement.mp4"),type:"video/mp4"}}),v._v("\n  Your browser does not support the video tag.\n")]),v._v(" "),_("p",[v._v("在下一节中，我们将讨论如何将多个属性组合到一个动画中以实现更复杂的时间轴动画，并讨论如何利用其他关键帧来制作更复杂的动画。")])])}),[],!1,null,null,null);t.default=s.exports}}]);