(window.webpackJsonp=window.webpackJsonp||[]).push([[287],{649:function(a,r,e){"use strict";e.r(r);var t=e(26),s=Object(t.a)({},(function(){var a=this,r=a.$createElement,e=a._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"scenescript-class-ianimationlayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scenescript-class-ianimationlayer"}},[a._v("#")]),a._v(" SceneScript Class IAnimationLayer")]),a._v(" "),e("p",[a._v("此类代表操控变形动画或 3D 模型动画图层。可以使用如下配置属性创建新的动画图层:")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("config.blendin")]),a._v(": Boolean - 自动平滑混合动画的开始。")]),a._v(" "),e("li",[e("strong",[a._v("config.blendout")]),a._v(": Boolean - 自动平滑混合动画的结束。")]),a._v(" "),e("li",[e("strong",[a._v("config.blendtime")]),a._v(": Number - 动画混合的时间（以秒为单位）。")]),a._v(" "),e("li",[e("strong",[a._v("config.autosort")]),a._v(": Boolean - 在所有不透明图层之后插入图层，但在任何其他图层之前。")])]),a._v(" "),e("h2",{attrs:{id:"properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[a._v("#")]),a._v(" Properties")]),a._v(" "),e("h3",{attrs:{id:"fps-number-readonly-只读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fps-number-readonly-只读"}},[a._v("#")]),a._v(" fps: Number (readonly 只读)")]),a._v(" "),e("p",[a._v("动画图层的帧速率")]),a._v(" "),e("h3",{attrs:{id:"framecount-number-readonly-只读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#framecount-number-readonly-只读"}},[a._v("#")]),a._v(" frameCount: Number (readonly 只读)")]),a._v(" "),e("p",[a._v("动画图层的帧数")]),a._v(" "),e("h3",{attrs:{id:"duration-number-readonly-只读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#duration-number-readonly-只读"}},[a._v("#")]),a._v(" duration: Number (readonly 只读)")]),a._v(" "),e("p",[a._v("动画图层的持续时间")]),a._v(" "),e("h3",{attrs:{id:"name-string-readonly-只读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name-string-readonly-只读"}},[a._v("#")]),a._v(" name: String (readonly 只读)")]),a._v(" "),e("p",[a._v("动画图层的自定义名称。")]),a._v(" "),e("h3",{attrs:{id:"rate-number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rate-number"}},[a._v("#")]),a._v(" rate: Number")]),a._v(" "),e("p",[a._v("动画图层的速度系数。")]),a._v(" "),e("h3",{attrs:{id:"blend-number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blend-number"}},[a._v("#")]),a._v(" blend: Number")]),a._v(" "),e("p",[a._v("该动画图层的混合量。")]),a._v(" "),e("h3",{attrs:{id:"visible-boolean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#visible-boolean"}},[a._v("#")]),a._v(" visible: Boolean")]),a._v(" "),e("p",[a._v("动画图层是否正在被应用（也就是是否可见）。")]),a._v(" "),e("h2",{attrs:{id:"函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),e("h3",{attrs:{id:"play-void"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#play-void"}},[a._v("#")]),a._v(" play(): void")]),a._v(" "),e("p",[a._v("当处于暂停或停止状态时继续播放动画。")]),a._v(" "),e("h3",{attrs:{id:"stop-void"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stop-void"}},[a._v("#")]),a._v(" stop(): void")]),a._v(" "),e("p",[a._v("停止动画并恢复到初始状态。")]),a._v(" "),e("h3",{attrs:{id:"pause-void"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pause-void"}},[a._v("#")]),a._v(" pause(): void")]),a._v(" "),e("p",[a._v("在当前位置暂停动画。")]),a._v(" "),e("h3",{attrs:{id:"isplaying-boolean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isplaying-boolean"}},[a._v("#")]),a._v(" isPlaying(): Boolean")]),a._v(" "),e("p",[a._v("返回动画图层是否正在播放或暂停的布尔值。")]),a._v(" "),e("h3",{attrs:{id:"getframe-number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getframe-number"}},[a._v("#")]),a._v(" getFrame(): Number")]),a._v(" "),e("p",[a._v("获取动画图层的当前帧。")]),a._v(" "),e("h3",{attrs:{id:"setframe-frame-number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setframe-frame-number"}},[a._v("#")]),a._v(" setFrame(frame: Number)")]),a._v(" "),e("p",[a._v("给动画图层设置为指定帧。")]),a._v(" "),e("h3",{attrs:{id:"addendedcallback-callback-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addendedcallback-callback-function"}},[a._v("#")]),a._v(" addEndedCallback(callback: Function)")]),a._v(" "),e("p",[a._v("添加一个回调函数，每当动画到达终点时触发。")])])}),[],!1,null,null,null);r.default=s.exports}}]);