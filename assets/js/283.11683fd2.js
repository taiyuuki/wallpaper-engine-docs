(window.webpackJsonp=window.webpackJsonp||[]).push([[283],{644:function(a,t,e){"use strict";e.r(t);var r=e(26),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"scenescript-class-audiobuffers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scenescript-class-audiobuffers"}},[a._v("#")]),a._v(" SceneScript Class AudioBuffers")]),a._v(" "),e("p",[a._v("提供对左右音频频谱值及其平均值的访问。"),e("code",[a._v("left")]),a._v("、"),e("code",[a._v("right")]),a._v("以及"),e("code",[a._v("average")]),a._v("数组的大小始终与 "),e("a",{attrs:{href:"/wallpaper-engine-docs/scene/scenescript/reference/class/IEngine"}},[a._v("engine.registerAudioBuffers(resolution: Number)")]),a._v("）参数定义的大小相同。它们会每一帧自动更新，因此你可以持续读取此对象的音频电平。")]),a._v(" "),e("p",[a._v("如果你已初始化此对象的频段，例如"),e("code",[a._v("16")]),a._v("，则访问"),e("code",[a._v("left[0]")]),a._v("、"),e("code",[a._v("right[0]")]),a._v("或"),e("code",[a._v("average[0]")]),a._v("，将得到低音频率的当前音频电平，这对于检测节拍很有用，这在Wallpaper Engine是很常用的。相应的，访问"),e("code",[a._v("left[15]")]),a._v(", "),e("code",[a._v("right[15]")]),a._v("或"),e("code",[a._v("average[15]")]),a._v("将用于获取高音频率，介于两者之间的则表示特定的频段的电平值。")]),a._v(" "),e("p",[a._v("音量级别通常介于"),e("code",[a._v("0.00")]),a._v("到"),e("code",[a._v("1.00")]),a._v("之间，但在某些情况下它们也可能达到高于1。如果这对你的用例来说是个问题，你可以利用"),e("code",[a._v("Math.min()")]),a._v("对其进行限制.例如：")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("min")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.00")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" audioBuffers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("average"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h2",{attrs:{id:"属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),e("h3",{attrs:{id:"average-float32array"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#average-float32array"}},[a._v("#")]),a._v(" average: Float32Array")]),a._v(" "),e("p",[a._v("这是左右两个音频通道（"),e("code",[a._v("left")]),a._v("和"),e("code",[a._v("right")]),a._v("）的算术平均值。")]),a._v(" "),e("p",[a._v("建议使用此属性，除非你需要单独处理自两个音频通道的音频数据。")]),a._v(" "),e("h3",{attrs:{id:"left-float32array"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#left-float32array"}},[a._v("#")]),a._v(" left: Float32Array")]),a._v(" "),e("p",[a._v("左侧音频电平构成的数组。")]),a._v(" "),e("h3",{attrs:{id:"right-float32array"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#right-float32array"}},[a._v("#")]),a._v(" right: Float32Array")]),a._v(" "),e("p",[a._v("右侧音频电平构成的数组。")])])}),[],!1,null,null,null);t.default=s.exports}}]);