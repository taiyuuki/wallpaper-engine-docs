(window.webpackJsonp=window.webpackJsonp||[]).push([[329],{690:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用-scenescript-更改时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-scenescript-更改时间"}},[t._v("#")]),t._v(" 使用 SceneScript 更改时间")]),t._v(" "),a("p",[t._v("在本教程中，我们将介绍 SceneScript 如何根据当前时间更改壁纸的某些部分。我们的示例会很具体，但实际你可以通过"),a("RouterLink",{attrs:{to:"/wallpaper-engine-docs/scene/scenescript/reference/class/IEngine.html#timeofday-number"}},[a("strong",[t._v("engine.timeOfDay")])]),t._v("简单获取当前时间，以便实现你的想法或自定义逻辑。")],1),t._v(" "),a("p",[t._v("或者，你也可以使用 "),a("em",[t._v("ECMAScript")]),t._v(" 的"),a("code",[t._v("Date")]),t._v("类来访问当前的小时、分钟、秒和更多与日期相关的数据，就像在其他语言（如 "),a("em",[t._v("JavaScript")]),t._v("）中一样。")]),t._v(" "),a("h2",{attrs:{id:"根据时间更改背景图像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据时间更改背景图像"}},[t._v("#")]),t._v(" 根据时间更改背景图像")]),t._v(" "),a("p",[t._v("我们将探讨如何利用"),a("a",{attrs:{href:"/wallpaper-engine-docs/scene/effects/effect/blend"}},[t._v("混合效果")]),t._v("根据当前时间多次更改整个背景图像。我们强烈建议你使用"),a("em",[t._v("混合")]),t._v("效果，而不是使用多个图像图层，以减少对显存的消耗。这可以显著提高性能，尤其是对于图像图层。")]),t._v(" "),a("video",{attrs:{width:"100%",controls:"",autoplay:"",loop:""}},[a("source",{attrs:{src:t.$withBase("/videos/timeofday.mp4"),type:"video/mp4"}}),t._v("\n  Your browser does not support the video tag.\n")]),t._v(" "),a("h3",{attrs:{id:"混合效果的基础图像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混合效果的基础图像"}},[t._v("#")]),t._v(" 混合效果的基础图像")]),t._v(" "),a("p",[t._v("首先添加一张午夜图像作为壁纸的基础图像。在我们的例子中，它是一个窗户的夜间版本，如上面的动画所示。我们将用 SceneScript 逻辑令此图像在时钟到达午夜时刻00：00：00时显示。")]),t._v(" "),a("p",[t._v("添加午夜图像图层后，向其添加 "),a("a",{attrs:{href:"/wallpaper-engine-docs/scene/effects/effect/blend"}},[t._v("混合效果")]),t._v(" ，然后继续本教程的后续步骤。")]),t._v(" "),a("h3",{attrs:{id:"混合模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混合模式"}},[t._v("#")]),t._v(" 混合模式")]),t._v(" "),a("p",[t._v("选择已添加到的混合效果。首先，确保"),a("strong",[t._v("混合模式")]),t._v("选项的设置是"),a("strong",[t._v("Normal")]),t._v("（正常模式）。这是为了确保混合纹理以其原始状态呈现，而不受其他混合纹理的影响。在某些情况下，你可能希望出于艺术目的偏离这一点，但在大多数情况下，"),a("strong",[t._v("Normal")]),t._v("选项应该是最佳选择。")]),t._v(" "),a("h3",{attrs:{id:"纹理数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纹理数量"}},[t._v("#")]),t._v(" 纹理数量")]),t._v(" "),a("p",[t._v("配置混合模式后，将"),a("strong",[t._v("纹理量")]),t._v("选项设置为除基础图像以外，要在一天中显示的附加图像数量。在我们的例子中，除了代表午夜的基本图像之外，我们还有"),a("strong",[t._v("三个")]),t._v("额外的图像，因此我们将值设置为"),a("strong",[t._v("3")]),t._v("：")]),t._v(" "),a("ol",[a("li",[t._v("黎明")]),t._v(" "),a("li",[t._v("中午")]),t._v(" "),a("li",[t._v("黄昏")])]),t._v(" "),a("p",[t._v("加载其他纹理最快捷的方法是将它们直接拖到编辑器"),a("strong",[t._v("混合纹理")]),t._v("框中，并确保图像按一天从开始到结束的正确顺序。")]),t._v(" "),a("p",[t._v("请参阅以下视频，了解以上步骤：")]),t._v(" "),a("video",{staticStyle:{margin:"0 auto",display:"block"},attrs:{width:"75%",controls:"",autoplay:"",loop:""}},[a("source",{attrs:{src:t.$withBase("/videos/blend_textures.mp4"),type:"video/mp4"}}),t._v("\n  Your browser does not support the video tag.\n")]),t._v(" "),a("p",[t._v("你现在可以看到最后一个混合纹理作为壁纸图像了，因为最后一个混合纹理覆盖了所有其他纹理。")]),t._v(" "),a("h3",{attrs:{id:"混合量的-scenescript-逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混合量的-scenescript-逻辑"}},[t._v("#")]),t._v(" 混合量的 SceneScript 逻辑")]),t._v(" "),a("p",[t._v("现在就是SceneScript发挥作用的时候。我们需要使用 SceneScript 更改"),a("strong",[t._v("混合效果")]),t._v("属性列表底部的"),a("strong",[t._v("混合量")]),t._v("选项，以便每个纹理在一天中的特定时间开始出现。我们可以使用 SceneScript 实现此目的，方法是混合量从0开始，然后在达到一天中的特定时间时平滑地将该值增加到1。")]),t._v(" "),a("p",[t._v("单击第一个"),a("strong",[t._v("混合量")]),t._v("旁边的齿轮图标，然后选择"),a("strong",[t._v("绑定脚本")]),t._v("，然后将现有示例脚本替换为以下代码片段：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" WEMath "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WEMath'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("START_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("END_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLEND_DURATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.004")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" WEMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("smoothStep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("START_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLEND_DURATION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("START_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      engine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeOfDay\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" WEMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("smoothStep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("END_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("END_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLEND_DURATION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      engine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeOfDay\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("此代码片段使用两个Wallpaper Engine SceneScript功能:")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/wallpaper-engine-docs/scene/scenescript/reference/class/IEngine.html#timeofday-number"}},[a("strong",[t._v("engine.timeOfDay")])]),t._v(" 表示当前一天当中的时间，值的范围是0.00-1.00，而不是秒，其中0.00代表00:00:00,而1.00代表23:59:59。")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/wallpaper-engine-docs/scene/scenescript/reference/module/WEMath.html#smoothstep-min-number-max-number-value-number-number"}},[a("strong",[t._v("WEMath.smoothStep()")])]),t._v(" 这是一个函数，它可以平滑地计算两个值之间的值，我们用它来从一个纹理平滑地混合到下一个纹理。")],1)]),t._v(" "),a("p",[t._v("将此脚本添加到每个"),a("strong",[t._v("混合纹理")]),t._v("的混合量。确保始终重新配置"),a("code",[t._v("START_HOUR")]),t._v("和"),a("code",[t._v("END_HOUR")]),t._v("值，以控制每个混合纹理在一天中的什么时间出现。")]),t._v(" "),a("p",[t._v("常量"),a("code",[t._v("BLEND_DURATION")]),t._v("的默认值"),a("code",[t._v("0.004")]),t._v("会让两个相邻混合图层之间的平滑过渡正好持续14.4秒，你可以根据自己的喜好稍微调此值，但请确保对所有图层使用相同的值。每增加"),a("code",[t._v("0.001")]),t._v("会使混合时间延长3.6秒。")]),t._v(" "),a("p",[t._v("仔细检查混合图层之间是否没有留下任何间隙，你设置的各个时间段应涵盖一整天，而没有跳过一天中的任何时间。唯一的例外是在午夜，因为默认情况下，基本图像在午夜始终可见。")]),t._v(" "),a("p",[t._v("在我们的示例中，我们设置的值如下，但你可以根据自己的喜好调整它们：")]),t._v(" "),a("p",[a("strong",[t._v("混合量:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("START_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("END_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("混合量2:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("START_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("END_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("混合量3:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("START_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("END_HOUR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果你的昼夜周期包含不同数量的混合纹理，则需要适当地重新分配每个纹理的涵盖时间。")]),t._v(" "),a("p",[t._v("在我们的示例中，基础的午夜纹理在早上7：00之前可见，最后一个混合纹理淡出之后，在晚上22：00将再次可见。你不需要配置午夜图像纹理，因为其他混合纹理都不可见时，它就会变为可见。")])])}),[],!1,null,null,null);s.default=e.exports}}]);