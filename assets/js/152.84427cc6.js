(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{511:function(t,e,s){"use strict";s.r(e);var a=s(26),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"modifying-colors-with-scenescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modifying-colors-with-scenescript"}},[t._v("#")]),t._v(" Modifying Colors with SceneScript")]),t._v(" "),s("p",[t._v("In this guide, we explain how you can use SceneScript to modify the colors of an object. We also explain how to utilize the "),s("code",[t._v("WEColor")]),t._v(" module to easily shift through colors instead of having to manually deal with "),s("strong",[t._v("RGB")]),t._v(" values. As always, this is just an example implementation, you can modify the colors in much more complex ways and create your own custom behavior.")]),t._v(" "),s("video",{attrs:{width:"100%",controls:"",autoplay:"",loop:""}},[s("source",{attrs:{src:t.$withBase("/videos/scenescript_color.mp4"),type:"video/mp4"}}),t._v("\n  Your browser does not support the video tag.\n")]),t._v(" "),s("h2",{attrs:{id:"color-properties-and-scenescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#color-properties-and-scenescript"}},[t._v("#")]),t._v(" Color Properties and SceneScript")]),t._v(" "),s("p",[t._v("Wallpaper Engine offers a "),s("a",{attrs:{href:"/wallpaper-engine-docs/scene/userproperties/color"}},[t._v("color property")]),t._v(" that you can find throughout various assets in the editor, you can also add a distinct "),s("a",{attrs:{href:"/wallpaper-engine-docs/scene/effects/effect/tint"}},[t._v("Tint effect")]),t._v(" to image layers for more complex scenarios.")]),t._v(" "),s("p",[t._v("The color property in Wallpaper Engine is always represented by a "),s("a",{attrs:{href:"/wallpaper-engine-docs/scene/scenescript/reference/class/Vec3"}},[t._v("Vec3")]),t._v(" object. The three properties represent the three RGB color channels:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("x")]),t._v(": Red Color Channel")]),t._v(" "),s("li",[s("code",[t._v("y")]),t._v(": Green Color Channel")]),t._v(" "),s("li",[s("code",[t._v("z")]),t._v(": Blue Color Channel")])]),t._v(" "),s("p",[t._v("You can modify these RGB values with SceneScript to your liking, the values range from "),s("code",[t._v("0")]),t._v(" to "),s("code",[t._v("255")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"rainbow-color-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rainbow-color-example"}},[t._v("#")]),t._v(" Rainbow Color Example")]),t._v(" "),s("p",[t._v("To implement this example in your own project, select an image layer in your wallpaper. Then click on the cogwheel icon next to its "),s("strong",[t._v("Color")]),t._v(" property and select "),s("strong",[t._v("Bind SceneScript")]),t._v(" to bind a script to the color property and to view the SceneScript editor.")]),t._v(" "),s("h3",{attrs:{id:"utilizing-the-wecolor-module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utilizing-the-wecolor-module"}},[t._v("#")]),t._v(" Utilizing the WEColor Module")]),t._v(" "),s("p",[t._v("SceneScript comes with the "),s("a",{attrs:{href:"/wallpaper-engine-docs/scene/scenescript/reference/module/WEColor"}},[t._v("WEColor")]),t._v(" module which holds a few utility functions to make it easier to work with colors. In our example, we want to constantly shift the colors. Implementing this with just the "),s("code",[t._v("red")]),t._v(", "),s("code",[t._v("green")]),t._v(" and "),s("code",[t._v("blue")]),t._v(" color channels is rather tedious. For this reason, it makes sense to work on the "),s("strong",[t._v("HSV")]),t._v(" representation of our color instead of the standard "),s("strong",[t._v("RGB")]),t._v(" representation.")]),t._v(" "),s("p",[t._v("If you are unfamiliar with "),s("strong",[t._v("HSV")]),t._v(", it represents each color with three components: "),s("code",[t._v("Hue")]),t._v(", "),s("code",[t._v("Saturation")]),t._v(" and "),s("code",[t._v("Value")]),t._v(". The "),s("code",[t._v("Hue")]),t._v(" value represents the color on its own which makes it very convenient for our use-case, as we simply have to modify the "),s("code",[t._v("Hue")]),t._v(" value instead of having to deal with "),s("code",[t._v("red")]),t._v(", "),s("code",[t._v("green")]),t._v(" and "),s("code",[t._v("blue")]),t._v(" color values.")]),t._v(" "),s("p",[t._v("We start by importing the "),s("code",[t._v("WEColor")]),t._v(" module into our script:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" WEColor "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WEColor'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("In the "),s("code",[t._v("update()")]),t._v(" function, we now utilize the "),s("code",[t._v("WEColor.hsv2rgb()")]),t._v(" function to generate new "),s("strong",[t._v("RGB")]),t._v(" values for our color on each frame. The "),s("code",[t._v("WEColor.hsv2rgb()")]),t._v(" function takes a "),s("code",[t._v("Vec3")]),t._v(" object as an argument which we generate on-the-fly as follows:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\tvalue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" WEColor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hsv2rgb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" engine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\ty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tz"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("As you can see, we mainly care about the "),s("code",[t._v("x")]),t._v(" value here, which represents the "),s("strong",[t._v("Hue")]),t._v(" value of our color. We simply increase this number along with the "),s("code",[t._v("engine.runtime")]),t._v(" variable. The "),s("code",[t._v("engine.runtime")]),t._v(" variable constantly increases as long as the wallpaper is loaded, so we have an infinite color shift. In our example, we have multiplied the "),s("code",[t._v("engine.runtime")]),t._v(" value with 0.25 to slow it down a bit, you can modify this value to your liking and either increase or further decrease this value.")]),t._v(" "),s("p",[t._v("We leave the "),s("strong",[t._v("Saturation")]),t._v(" and "),s("strong",[t._v("Value")]),t._v(" represented by "),s("code",[t._v("y")]),t._v(" and "),s("code",[t._v("z")]),t._v(" unchanged at their maximum value of "),s("code",[t._v("1")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"full-rainbow-color-solution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#full-rainbow-color-solution"}},[t._v("#")]),t._v(" Full Rainbow Color Solution")]),t._v(" "),s("p",[t._v("You can find the full solution below. We have moved the speed factor into a new constant value named "),s("code",[t._v("RAINBOW_SPEED")]),t._v(" at the top of the script to make it easier to read and modify and we did the same for the saturation and brightness levels of our "),s("strong",[t._v("HSV")]),t._v(" color. After modifying the value, we simply return it and our color property will now shift through all colors in a constant speed.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" WEColor "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WEColor'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RAINBOW_SPEED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RAINBOW_SATURATION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RAINBOW_BRIGHTNESS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {Vec3} value\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\tvalue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" WEColor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hsv2rgb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" engine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RAINBOW_SPEED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\ty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RAINBOW_SATURATION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tz"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RAINBOW_BRIGHTNESS")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("You can conveniently access this example in the SceneScript code editor by clicking on "),s("strong",[t._v("Snippets")]),t._v(" at the top, followed by "),s("strong",[t._v("Replace Script")]),t._v(" and then "),s("strong",[t._v("Rainbow Color")]),t._v(". This will replace all your existing code for your current element with the rainbow example from above.")])])])}),[],!1,null,null,null);e.default=o.exports}}]);