(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{675:function(e,r,t){"use strict";t.r(r);var a=t(26),v=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"scenescript-class-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scenescript-class-vec2"}},[e._v("#")]),e._v(" SceneScript Class Vec2")]),e._v(" "),t("p",[e._v("用于创建 2 维键值对的工具类，键值对为"),t("code",[e._v("x")]),e._v(" 和 "),t("code",[e._v("y")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),t("h3",{attrs:{id:"x-number"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x-number"}},[e._v("#")]),e._v(" x: Number")]),e._v(" "),t("p",[e._v("第一项的值。")]),e._v(" "),t("h3",{attrs:{id:"y-number"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#y-number"}},[e._v("#")]),e._v(" y: Number")]),e._v(" "),t("p",[e._v("第二项的值。")]),e._v(" "),t("h2",{attrs:{id:"构建函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建函数"}},[e._v("#")]),e._v(" 构建函数")]),e._v(" "),t("h3",{attrs:{id:"constructor-x-number-y-number-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-x-number-y-number-vec2"}},[e._v("#")]),e._v(" constructor(x: Number, y: Number): Vec2")]),e._v(" "),t("p",[e._v("分别设置 x 和 y 的构造函数。")]),e._v(" "),t("h3",{attrs:{id:"constructor-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-vec2"}},[e._v("#")]),e._v(" constructor(): Vec2")]),e._v(" "),t("p",[e._v("将所有成员设置为 0 的构造函数。")]),e._v(" "),t("h3",{attrs:{id:"constructor-value-number-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-value-number-vec2"}},[e._v("#")]),e._v(" constructor(value: Number): Vec2")]),e._v(" "),t("p",[e._v("将 x 和 y 设置为同一个值的构造函数。")]),e._v(" "),t("h3",{attrs:{id:"constructor-value-string-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-value-string-vec2"}},[e._v("#")]),e._v(" constructor(value: String): Vec2")]),e._v(" "),t("p",[e._v("解析字符串中的前两个数字并设置 x 和 y的构造函数。")]),e._v(" "),t("h3",{attrs:{id:"constructor-value-vec3-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-value-vec3-vec2"}},[e._v("#")]),e._v(" constructor(value: Vec3): Vec2")]),e._v(" "),t("p",[e._v("从 Vec3 中设置 x 和 y的构造函数。")]),e._v(" "),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[e._v("#")]),e._v(" 函数")]),e._v(" "),t("h3",{attrs:{id:"length-number"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#length-number"}},[e._v("#")]),e._v(" length(): Number")]),e._v(" "),t("p",[e._v("返回向量的长度。")]),e._v(" "),t("h3",{attrs:{id:"lengthsqr-number"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lengthsqr-number"}},[e._v("#")]),e._v(" lengthSqr(): Number")]),e._v(" "),t("p",[e._v("返回向量的平方长度。这更高效，如果你只需要进行二进制比较，请使用它。")]),e._v(" "),t("h3",{attrs:{id:"normalize-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#normalize-vec2"}},[e._v("#")]),e._v(" normalize(): Vec2")]),e._v(" "),t("p",[e._v("规范化向量并将结果作为新对象返回。")]),e._v(" "),t("h3",{attrs:{id:"copy-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#copy-vec2"}},[e._v("#")]),e._v(" copy(): Vec2")]),e._v(" "),t("p",[e._v("返回一个副本。")]),e._v(" "),t("h3",{attrs:{id:"add-value-number-vec2-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-value-number-vec2-vec2"}},[e._v("#")]),e._v(" add(value: Number|Vec2): Vec2")]),e._v(" "),t("p",[e._v("增加参数的数值并将结果作为新对象返回。")]),e._v(" "),t("h3",{attrs:{id:"subtract-value-number-vec2-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subtract-value-number-vec2-vec2"}},[e._v("#")]),e._v(" subtract(value: Number|Vec2): Vec2")]),e._v(" "),t("p",[e._v("减去参数的数值并将结果作为新对象返回。")]),e._v(" "),t("h3",{attrs:{id:"multiply-value-number-vec2-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multiply-value-number-vec2-vec2"}},[e._v("#")]),e._v(" multiply(value: Number|Vec2): Vec2")]),e._v(" "),t("p",[e._v("将两个分量相乘并将结果作为新对象返回。")]),e._v(" "),t("h3",{attrs:{id:"divide-value-number-vec2-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#divide-value-number-vec2-vec2"}},[e._v("#")]),e._v(" divide(value: Number|Vec2): Vec2")]),e._v(" "),t("p",[e._v("将两个分量相除并将结果作为新对象返回。")]),e._v(" "),t("h3",{attrs:{id:"dot-value-vec2-number"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dot-value-vec2-number"}},[e._v("#")]),e._v(" dot(value: Vec2): Number")]),e._v(" "),t("p",[e._v("计算向量的点积。")]),e._v(" "),t("h3",{attrs:{id:"reflect-normal-vec2-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reflect-normal-vec2-vec2"}},[e._v("#")]),e._v(" reflect(normal: Vec2): Vec2")]),e._v(" "),t("p",[e._v("返回法线向量。")]),e._v(" "),t("h3",{attrs:{id:"perpendicular-vec2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#perpendicular-vec2"}},[e._v("#")]),e._v(" perpendicular(): Vec2")]),e._v(" "),t("p",[e._v("返回垂直向量的副本。")]),e._v(" "),t("h3",{attrs:{id:"tostring-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tostring-string"}},[e._v("#")]),e._v(" toString(): String")]),e._v(" "),t("p",[e._v("将成员组合为字符串，用空格分隔，以便可以再次解析。")])])}),[],!1,null,null,null);r.default=v.exports}}]);