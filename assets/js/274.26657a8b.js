(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{637:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"可交互的操控变形动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可交互的操控变形动画"}},[t._v("#")]),t._v(" 可交互的操控变形动画")]),t._v(" "),a("p",[t._v("操控变形动画与 "),a("em",[t._v("SceneScript")]),t._v(" 结合使用可用于创建交互式的壁纸元素。在本教程中，我们将讨论如何能让用户抓取和拖动单个骨骼。")]),t._v(" "),a("p",[t._v("在尝试本教程之前，你应该已经阅读并理解了"),a("a",{attrs:{href:"/wallpaper-engine-docs/scene/puppet-warp/introduction"}},[t._v("操控变形动画介绍")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"可交互骨骼"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可交互骨骼"}},[t._v("#")]),t._v(" 可交互骨骼")]),t._v(" "),a("p",[t._v("在本指南中，我们将介绍如何创建用户可以拖动和释放的交互式壁纸元素。")]),t._v(" "),a("video",{attrs:{width:"100%",controls:"",loop:""}},[a("source",{attrs:{src:t.$withBase("/videos/puppet_warp_interactive.mp4"),type:"video/mp4"}}),t._v("\n  Your browser does not support the video tag.\n")]),t._v(" "),a("p",[t._v("如果你想跟随本教程或查看完整的示例项目，请点击这里下载：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/samples/jelly_simple.zip"}},[t._v("点击这里下载简单的果冻项目示例")])])]),t._v(" "),a("h3",{attrs:{id:"设置操控变形动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置操控变形动画"}},[t._v("#")]),t._v(" 设置操控变形动画")]),t._v(" "),a("p",[t._v("为此，我们需要将操控变形与 SceneScript 结合使用。我们首先在 "),a("strong",[t._v("果冻")]),t._v(" 对象上创建一个操控变形。几何图形没有任何需要特别注意的地方。对于骨骼设置，我们的基本示例仅包含两个骨骼：一个静态的主要骨骼，表示果冻对象的外部区域，一个位于果冻对象中心的骨骼，为其设置 "),a("strong",[t._v("骨骼约束")]),t._v(" 并使用 "),a("strong",[t._v("弹簧物理模拟")]),t._v(" ：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wallpaper-engine-docs/img/puppet-warp/puppet_warp_interactive_bones.png",alt:"Puppet Warp - Interactive Bone Setup"}})]),t._v(" "),a("p",[t._v("对于中间骨骼的骨骼约束，我们使用 "),a("strong",[t._v("弹簧物理模拟")]),t._v("，然后开启 "),a("strong",[t._v("物理平移")]),t._v("，并将其他所有设置维持为默认状态。这意味着我们能够四处移动骨骼（这就是 "),a("strong",[t._v("物理平移")]),t._v(" 的作用），由于是弹簧模拟，因此当鼠标释放时，它将自动恢复为原始状态。")]),t._v(" "),a("p",[t._v("此外，为骨骼设置一个名称也很重要，我们稍后可以在代码中引用它。在我们的示例中，在编辑器中选中它时，将骨骼命名为 MouseBone。")]),t._v(" "),a("p",[t._v("对于骨骼权重，中间骨骼包括物体中间的一小块区域。本例中，绿色区域表示鼠标光标可以拖动的区域，而红色区域表示主要骨骼的不可移动区域：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wallpaper-engine-docs/img/puppet-warp/puppet_warp_interactive_weights.png",alt:"Puppet Warp - Interactive Weight Setup"}})]),t._v(" "),a("p",[t._v("我们不需要为这个例子创建任何动画，因为鼠标交互和它是完全独立的。")]),t._v(" "),a("h3",{attrs:{id:"鼠标拖动的-scenescript-代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鼠标拖动的-scenescript-代码"}},[t._v("#")]),t._v(" 鼠标拖动的 SceneScript 代码")]),t._v(" "),a("p",[t._v("接下来，我们需要将 SceneScript 代码片段分配给果冻图像层。选择图层，然后单击右上角的齿轮图标，在可见性和锁定图标旁边。你可以复制粘贴下面的代码，通过代码注释可以查看详细信息：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置骨骼可以拖动的最大距离")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DRAG_MAX_DISTANCE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置可拖动骨骼的名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MOUSE_BONE_NAME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MouseBone'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" activeDragBone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" isDragging "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dragDelta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dragStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isDragging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用鼠标位置计算拖动距离")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" drag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cursorWorldPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dragStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dragDist "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" drag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tdrag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" drag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("divide")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dragDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拖动距离不能超过最大距离")]),t._v("\n\t\tdrag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dragStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("drag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DRAG_MAX_DISTANCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dragDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移动骨骼到新计算的拖动距离")]),t._v("\n\t\tthisLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBoneTransform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("activeDragBone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoneTransform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("activeDragBone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("drag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dragDelta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {CursorEvent} event\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cursorDown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bonePos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoneTransform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" delta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bonePos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cursorWorldPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" delta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果鼠标距离骨骼位置不超过最大距离，更新拖动位置")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DRAG_MAX_DISTANCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tdragStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bonePos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tdragDelta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" delta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tisDragging "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {CursorEvent} event\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cursorUp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 鼠标拖动结束，释放拖动动画")]),t._v("\n\tisDragging "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Get bone for mouse movement\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取鼠标可以拖动的骨骼的数字索引，并将其存储在变量中，以便稍后可以使用")]),t._v("\n\tactiveDragBone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoneIndex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MOUSE_BONE_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("首先，该代码将鼠标可以拖动的骨骼名称加载到变量中。如果你在设置过程中为骨骼指定了不同的名称，则可以在代码中更改 "),a("code",[t._v("MOUSE_BONE_NAME")]),t._v(" 的值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("thisLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoneIndex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MOUSE_BONE_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("骨骼的主要动作是在 "),a("code",[t._v("update()")]),t._v(" 函数中发生的。骨骼在鼠标的位置移动，里面的代码处理所有的动作。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("thisLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBoneTransform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("activeDragBone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoneTransform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("activeDragBone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("drag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dragDelta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("通过使用 "),a("code",[t._v("thisLayer.setBoneTransform")]),t._v("，我们可以通过索引访问当前图层的任何骨骼，第二个参数 "),a("code",[t._v("thisLayer.getBoneTransform(activeDragBone).translation(drag.add(dragDelta))")]),t._v(" 可能看起来有点混乱，但实际上并没有那么复杂。它基本上只是在获取骨骼的位置，然后根据鼠标在壁纸上的位置使用 "),a("code",[t._v(".translation()")]),t._v(" 函数移动骨骼到新的位置。")]),t._v(" "),a("p",[t._v("当鼠标被释放时，骨骼将返回其原始位置，因为骨骼在操控变形动画中被配置为 "),a("strong",[t._v("弹簧物理模拟")]),t._v("。这意味着骨骼将自动恢复到其原始位置，而无需额外的代码处理。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("你可以使用 SceneScript 显示的覆盖所有操控变形动画。Wallpaper Engine 在显示图层前会先在所有图层上执行所有动画，然后再执行每一帧上的任意脚本。")])]),t._v(" "),a("p",[t._v("将此代码片段应用于果冻图层后，你可以单击顶部的 "),a("strong",[t._v("运行预览")]),t._v(" 或者应用壁纸，它应该会像上面的预览视频中一样正常工作。请记住，它仅适用了一个。")]),t._v(" "),a("h2",{attrs:{id:"高级可交互操控变形动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级可交互操控变形动画"}},[t._v("#")]),t._v(" 高级可交互操控变形动画")]),t._v(" "),a("p",[t._v("我们还在一个单独的项目中创建了一个更复杂的示例。本例中，果冻有大量的骨骼，这些骨骼都可以拖来拖去。此外，它还包括一个时间轴动画，每当释放鼠标时，SceneScript 都会触发该动画，以模拟骨骼恢复到其原始状态的物理冲击（请参阅下面的视频）。果冻纹理也被制作成具有多种表情的精灵表，这些表情在拖动动画开始时会切换。该示例还包含声音，总体上有点复杂，但如果你想了解我们是如何实现这一点的，可以在以下链接中查看示例项目：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/samples/jelly_advanced.zip"}},[t._v("Click here to download the advanced jelly project.")])])]),t._v(" "),a("p",[t._v("你可以在以下视频中看到高级示例的实际效果：")]),t._v(" "),a("video",{attrs:{width:"100%",controls:"",loop:""}},[a("source",{attrs:{src:t.$withBase("/videos/puppet_warp_interactive_advanced.mp4"),type:"video/mp4"}}),t._v("\n  Your browser does not support the video tag.\n")])])}),[],!1,null,null,null);s.default=e.exports}}]);