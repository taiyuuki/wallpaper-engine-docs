(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{471:function(t,e,s){"use strict";s.r(e);var a=s(26),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"scenescript-class-iconsole"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scenescript-class-iconsole"}},[t._v("#")]),t._v(" SceneScript Class IConsole")]),t._v(" "),s("p",[t._v("You can access this interface anywhere in your SceneScript code through the global "),s("code",[t._v("console")]),t._v(" object to interact with the console log.")]),t._v(" "),s("h2",{attrs:{id:"functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),s("h3",{attrs:{id:"log-args-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log-args-void"}},[t._v("#")]),t._v(" log(...args): void")]),t._v(" "),s("p",[t._v("Converts all parameters to a string and concatenates them with a space, then prints them to the log as an info message.")]),t._v(" "),s("h3",{attrs:{id:"error-args-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-args-void"}},[t._v("#")]),t._v(" error(...args): void")]),t._v(" "),s("p",[t._v("Converts all parameters to a string and concatenates them with a space, then prints them to the log as an error message.")])])}),[],!1,null,null,null);e.default=r.exports}}]);